datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  customer
  admin
  superadmin
}

enum PurchaseStatus {
  pending
  approved
  rejected
}

enum PointsTransactionType {
  earn
  redeem
}

enum PointsTransactionStatus {
  pending
  confirmed
  redeemed
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  phone     String?
  role      Role     @default(customer)
  businessType String
  branchId  String
  branch    Branch  @relation(fields: [branchId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  purchases          Purchase[]
  pointsTransactions PointsTransaction[]
  adminLogs          AdminLog[]        @relation("AdminLogsByAdmin")
}

model Branch {
  id        String   @id @default(uuid())
  name      String
  address   String
  createdAt DateTime @default(now())

  users              User[]
  purchases          Purchase[]
  pointsTransactions PointsTransaction[]
}

model Purchase {
  id         String         @id @default(uuid())
  userId     String
  branchId   String
  folio      String
  description String
  amount     Decimal        @db.Decimal(12, 2)
  receiptUrl String
  status     PurchaseStatus @default(pending)
  createdAt  DateTime       @default(now())

  user   User   @relation(fields: [userId], references: [id])
  branch Branch @relation(fields: [branchId], references: [id])

  pointsTransactions PointsTransaction[]
}

model PointsTransaction {
  id         String                   @id @default(uuid())
  userId     String
  branchId   String
  purchaseId String
  type       PointsTransactionType
  points     Int
  value      Decimal                  @db.Decimal(12, 2)
  status     PointsTransactionStatus
  createdAt  DateTime                 @default(now())

  user     User     @relation(fields: [userId], references: [id])
  branch   Branch   @relation(fields: [branchId], references: [id])
  purchase Purchase @relation(fields: [purchaseId], references: [id])
}

model AdminLog {
  id        String   @id @default(uuid())
  adminId   String
  action    String
  details   Json
  createdAt DateTime @default(now())

  admin User @relation(name: "AdminLogsByAdmin", fields: [adminId], references: [id])
}